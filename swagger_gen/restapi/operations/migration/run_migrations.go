// Code generated by go-swagger; DO NOT EDIT.

package migration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// RunMigrationsHandlerFunc turns a function with the right signature into a run migrations handler
type RunMigrationsHandlerFunc func(RunMigrationsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RunMigrationsHandlerFunc) Handle(params RunMigrationsParams) middleware.Responder {
	return fn(params)
}

// RunMigrationsHandler interface for that can handle valid run migrations params
type RunMigrationsHandler interface {
	Handle(RunMigrationsParams) middleware.Responder
}

// NewRunMigrations creates a new http.Handler for the run migrations operation
func NewRunMigrations(ctx *middleware.Context, handler RunMigrationsHandler) *RunMigrations {
	return &RunMigrations{Context: ctx, Handler: handler}
}

/*
	RunMigrations swagger:route GET /migrations migration runMigrations

Run migrations
*/
type RunMigrations struct {
	Context *middleware.Context
	Handler RunMigrationsHandler
}

func (o *RunMigrations) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewRunMigrationsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
