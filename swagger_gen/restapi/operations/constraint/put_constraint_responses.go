// Code generated by go-swagger; DO NOT EDIT.

package constraint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// PutConstraintOKCode is the HTTP code returned for type PutConstraintOK
const PutConstraintOKCode int = 200

/*
PutConstraintOK constraint just updated

swagger:response putConstraintOK
*/
type PutConstraintOK struct {

	/*
	  In: Body
	*/
	Payload *models.Constraint `json:"body,omitempty"`
}

// NewPutConstraintOK creates PutConstraintOK with default headers values
func NewPutConstraintOK() *PutConstraintOK {

	return &PutConstraintOK{}
}

// WithPayload adds the payload to the put constraint o k response
func (o *PutConstraintOK) WithPayload(payload *models.Constraint) *PutConstraintOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put constraint o k response
func (o *PutConstraintOK) SetPayload(payload *models.Constraint) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConstraintOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutConstraintDefault generic error response

swagger:response putConstraintDefault
*/
type PutConstraintDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutConstraintDefault creates PutConstraintDefault with default headers values
func NewPutConstraintDefault(code int) *PutConstraintDefault {
	if code <= 0 {
		code = 500
	}

	return &PutConstraintDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put constraint default response
func (o *PutConstraintDefault) WithStatusCode(code int) *PutConstraintDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put constraint default response
func (o *PutConstraintDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put constraint default response
func (o *PutConstraintDefault) WithPayload(payload *models.Error) *PutConstraintDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put constraint default response
func (o *PutConstraintDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutConstraintDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
