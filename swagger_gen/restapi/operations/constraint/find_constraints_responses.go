// Code generated by go-swagger; DO NOT EDIT.

package constraint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// FindConstraintsOKCode is the HTTP code returned for type FindConstraintsOK
const FindConstraintsOKCode int = 200

/*
FindConstraintsOK constraints under the segment

swagger:response findConstraintsOK
*/
type FindConstraintsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Constraint `json:"body,omitempty"`
}

// NewFindConstraintsOK creates FindConstraintsOK with default headers values
func NewFindConstraintsOK() *FindConstraintsOK {

	return &FindConstraintsOK{}
}

// WithPayload adds the payload to the find constraints o k response
func (o *FindConstraintsOK) WithPayload(payload []*models.Constraint) *FindConstraintsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find constraints o k response
func (o *FindConstraintsOK) SetPayload(payload []*models.Constraint) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindConstraintsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Constraint, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
FindConstraintsDefault generic error response

swagger:response findConstraintsDefault
*/
type FindConstraintsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFindConstraintsDefault creates FindConstraintsDefault with default headers values
func NewFindConstraintsDefault(code int) *FindConstraintsDefault {
	if code <= 0 {
		code = 500
	}

	return &FindConstraintsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find constraints default response
func (o *FindConstraintsDefault) WithStatusCode(code int) *FindConstraintsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the find constraints default response
func (o *FindConstraintsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the find constraints default response
func (o *FindConstraintsDefault) WithPayload(payload *models.Error) *FindConstraintsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find constraints default response
func (o *FindConstraintsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindConstraintsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
