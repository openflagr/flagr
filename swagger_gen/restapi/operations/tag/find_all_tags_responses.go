// Code generated by go-swagger; DO NOT EDIT.

package tag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// FindAllTagsOKCode is the HTTP code returned for type FindAllTagsOK
const FindAllTagsOKCode int = 200

/*
FindAllTagsOK list all the tags

swagger:response findAllTagsOK
*/
type FindAllTagsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Tag `json:"body,omitempty"`
}

// NewFindAllTagsOK creates FindAllTagsOK with default headers values
func NewFindAllTagsOK() *FindAllTagsOK {

	return &FindAllTagsOK{}
}

// WithPayload adds the payload to the find all tags o k response
func (o *FindAllTagsOK) WithPayload(payload []*models.Tag) *FindAllTagsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find all tags o k response
func (o *FindAllTagsOK) SetPayload(payload []*models.Tag) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindAllTagsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Tag, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
FindAllTagsDefault generic error response

swagger:response findAllTagsDefault
*/
type FindAllTagsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFindAllTagsDefault creates FindAllTagsDefault with default headers values
func NewFindAllTagsDefault(code int) *FindAllTagsDefault {
	if code <= 0 {
		code = 500
	}

	return &FindAllTagsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find all tags default response
func (o *FindAllTagsDefault) WithStatusCode(code int) *FindAllTagsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the find all tags default response
func (o *FindAllTagsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the find all tags default response
func (o *FindAllTagsDefault) WithPayload(payload *models.Error) *FindAllTagsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find all tags default response
func (o *FindAllTagsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindAllTagsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
