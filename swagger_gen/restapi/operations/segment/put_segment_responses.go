// Code generated by go-swagger; DO NOT EDIT.

package segment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// PutSegmentOKCode is the HTTP code returned for type PutSegmentOK
const PutSegmentOKCode int = 200

/*
PutSegmentOK segment updated

swagger:response putSegmentOK
*/
type PutSegmentOK struct {

	/*
	  In: Body
	*/
	Payload *models.Segment `json:"body,omitempty"`
}

// NewPutSegmentOK creates PutSegmentOK with default headers values
func NewPutSegmentOK() *PutSegmentOK {

	return &PutSegmentOK{}
}

// WithPayload adds the payload to the put segment o k response
func (o *PutSegmentOK) WithPayload(payload *models.Segment) *PutSegmentOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put segment o k response
func (o *PutSegmentOK) SetPayload(payload *models.Segment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutSegmentOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutSegmentDefault generic error response

swagger:response putSegmentDefault
*/
type PutSegmentDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutSegmentDefault creates PutSegmentDefault with default headers values
func NewPutSegmentDefault(code int) *PutSegmentDefault {
	if code <= 0 {
		code = 500
	}

	return &PutSegmentDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put segment default response
func (o *PutSegmentDefault) WithStatusCode(code int) *PutSegmentDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put segment default response
func (o *PutSegmentDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put segment default response
func (o *PutSegmentDefault) WithPayload(payload *models.Error) *PutSegmentDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put segment default response
func (o *PutSegmentDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutSegmentDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
