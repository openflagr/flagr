// Code generated by go-swagger; DO NOT EDIT.

package flag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// SetFlagEnabledOKCode is the HTTP code returned for type SetFlagEnabledOK
const SetFlagEnabledOKCode int = 200

/*
SetFlagEnabledOK returns the flag

swagger:response setFlagEnabledOK
*/
type SetFlagEnabledOK struct {

	/*
	  In: Body
	*/
	Payload *models.Flag `json:"body,omitempty"`
}

// NewSetFlagEnabledOK creates SetFlagEnabledOK with default headers values
func NewSetFlagEnabledOK() *SetFlagEnabledOK {

	return &SetFlagEnabledOK{}
}

// WithPayload adds the payload to the set flag enabled o k response
func (o *SetFlagEnabledOK) WithPayload(payload *models.Flag) *SetFlagEnabledOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set flag enabled o k response
func (o *SetFlagEnabledOK) SetPayload(payload *models.Flag) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetFlagEnabledOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
SetFlagEnabledDefault generic error response

swagger:response setFlagEnabledDefault
*/
type SetFlagEnabledDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetFlagEnabledDefault creates SetFlagEnabledDefault with default headers values
func NewSetFlagEnabledDefault(code int) *SetFlagEnabledDefault {
	if code <= 0 {
		code = 500
	}

	return &SetFlagEnabledDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the set flag enabled default response
func (o *SetFlagEnabledDefault) WithStatusCode(code int) *SetFlagEnabledDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the set flag enabled default response
func (o *SetFlagEnabledDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the set flag enabled default response
func (o *SetFlagEnabledDefault) WithPayload(payload *models.Error) *SetFlagEnabledDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set flag enabled default response
func (o *SetFlagEnabledDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetFlagEnabledDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
