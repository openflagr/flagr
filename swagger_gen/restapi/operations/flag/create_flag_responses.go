// Code generated by go-swagger; DO NOT EDIT.

package flag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// CreateFlagOKCode is the HTTP code returned for type CreateFlagOK
const CreateFlagOKCode int = 200

/*
CreateFlagOK returns the created flag

swagger:response createFlagOK
*/
type CreateFlagOK struct {

	/*
	  In: Body
	*/
	Payload *models.Flag `json:"body,omitempty"`
}

// NewCreateFlagOK creates CreateFlagOK with default headers values
func NewCreateFlagOK() *CreateFlagOK {

	return &CreateFlagOK{}
}

// WithPayload adds the payload to the create flag o k response
func (o *CreateFlagOK) WithPayload(payload *models.Flag) *CreateFlagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create flag o k response
func (o *CreateFlagOK) SetPayload(payload *models.Flag) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateFlagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateFlagDefault generic error response

swagger:response createFlagDefault
*/
type CreateFlagDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateFlagDefault creates CreateFlagDefault with default headers values
func NewCreateFlagDefault(code int) *CreateFlagDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateFlagDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create flag default response
func (o *CreateFlagDefault) WithStatusCode(code int) *CreateFlagDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create flag default response
func (o *CreateFlagDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create flag default response
func (o *CreateFlagDefault) WithPayload(payload *models.Error) *CreateFlagDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create flag default response
func (o *CreateFlagDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateFlagDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
