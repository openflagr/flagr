// Code generated by go-swagger; DO NOT EDIT.

package flag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// FindFlagsOKCode is the HTTP code returned for type FindFlagsOK
const FindFlagsOKCode int = 200

/*
FindFlagsOK list all the flags

swagger:response findFlagsOK
*/
type FindFlagsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Flag `json:"body,omitempty"`
}

// NewFindFlagsOK creates FindFlagsOK with default headers values
func NewFindFlagsOK() *FindFlagsOK {

	return &FindFlagsOK{}
}

// WithPayload adds the payload to the find flags o k response
func (o *FindFlagsOK) WithPayload(payload []*models.Flag) *FindFlagsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find flags o k response
func (o *FindFlagsOK) SetPayload(payload []*models.Flag) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindFlagsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Flag, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
FindFlagsDefault generic error response

swagger:response findFlagsDefault
*/
type FindFlagsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewFindFlagsDefault creates FindFlagsDefault with default headers values
func NewFindFlagsDefault(code int) *FindFlagsDefault {
	if code <= 0 {
		code = 500
	}

	return &FindFlagsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the find flags default response
func (o *FindFlagsDefault) WithStatusCode(code int) *FindFlagsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the find flags default response
func (o *FindFlagsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the find flags default response
func (o *FindFlagsDefault) WithPayload(payload *models.Error) *FindFlagsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the find flags default response
func (o *FindFlagsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *FindFlagsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
