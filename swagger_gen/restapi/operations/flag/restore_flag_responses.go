// Code generated by go-swagger; DO NOT EDIT.

package flag

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// RestoreFlagOKCode is the HTTP code returned for type RestoreFlagOK
const RestoreFlagOKCode int = 200

/*
RestoreFlagOK returns the flag

swagger:response restoreFlagOK
*/
type RestoreFlagOK struct {

	/*
	  In: Body
	*/
	Payload *models.Flag `json:"body,omitempty"`
}

// NewRestoreFlagOK creates RestoreFlagOK with default headers values
func NewRestoreFlagOK() *RestoreFlagOK {

	return &RestoreFlagOK{}
}

// WithPayload adds the payload to the restore flag o k response
func (o *RestoreFlagOK) WithPayload(payload *models.Flag) *RestoreFlagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restore flag o k response
func (o *RestoreFlagOK) SetPayload(payload *models.Flag) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestoreFlagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
RestoreFlagDefault generic error response

swagger:response restoreFlagDefault
*/
type RestoreFlagDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRestoreFlagDefault creates RestoreFlagDefault with default headers values
func NewRestoreFlagDefault(code int) *RestoreFlagDefault {
	if code <= 0 {
		code = 500
	}

	return &RestoreFlagDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the restore flag default response
func (o *RestoreFlagDefault) WithStatusCode(code int) *RestoreFlagDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the restore flag default response
func (o *RestoreFlagDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the restore flag default response
func (o *RestoreFlagDefault) WithPayload(payload *models.Error) *RestoreFlagDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the restore flag default response
func (o *RestoreFlagDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RestoreFlagDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
