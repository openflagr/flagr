// Code generated by go-swagger; DO NOT EDIT.

package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// PutGlobalWebhookOKCode is the HTTP code returned for type PutGlobalWebhookOK
const PutGlobalWebhookOKCode int = 200

/*
PutGlobalWebhookOK webhook just updated

swagger:response putGlobalWebhookOK
*/
type PutGlobalWebhookOK struct {

	/*
	  In: Body
	*/
	Payload *models.Webhook `json:"body,omitempty"`
}

// NewPutGlobalWebhookOK creates PutGlobalWebhookOK with default headers values
func NewPutGlobalWebhookOK() *PutGlobalWebhookOK {

	return &PutGlobalWebhookOK{}
}

// WithPayload adds the payload to the put global webhook o k response
func (o *PutGlobalWebhookOK) WithPayload(payload *models.Webhook) *PutGlobalWebhookOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put global webhook o k response
func (o *PutGlobalWebhookOK) SetPayload(payload *models.Webhook) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGlobalWebhookOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PutGlobalWebhookDefault generic error response

swagger:response putGlobalWebhookDefault
*/
type PutGlobalWebhookDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutGlobalWebhookDefault creates PutGlobalWebhookDefault with default headers values
func NewPutGlobalWebhookDefault(code int) *PutGlobalWebhookDefault {
	if code <= 0 {
		code = 500
	}

	return &PutGlobalWebhookDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put global webhook default response
func (o *PutGlobalWebhookDefault) WithStatusCode(code int) *PutGlobalWebhookDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put global webhook default response
func (o *PutGlobalWebhookDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put global webhook default response
func (o *PutGlobalWebhookDefault) WithPayload(payload *models.Error) *PutGlobalWebhookDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put global webhook default response
func (o *PutGlobalWebhookDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutGlobalWebhookDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
