// Code generated by go-swagger; DO NOT EDIT.

package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// CreateGlobalWebhookOKCode is the HTTP code returned for type CreateGlobalWebhookOK
const CreateGlobalWebhookOKCode int = 200

/*
CreateGlobalWebhookOK webhook just created

swagger:response createGlobalWebhookOK
*/
type CreateGlobalWebhookOK struct {

	/*
	  In: Body
	*/
	Payload *models.Webhook `json:"body,omitempty"`
}

// NewCreateGlobalWebhookOK creates CreateGlobalWebhookOK with default headers values
func NewCreateGlobalWebhookOK() *CreateGlobalWebhookOK {

	return &CreateGlobalWebhookOK{}
}

// WithPayload adds the payload to the create global webhook o k response
func (o *CreateGlobalWebhookOK) WithPayload(payload *models.Webhook) *CreateGlobalWebhookOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create global webhook o k response
func (o *CreateGlobalWebhookOK) SetPayload(payload *models.Webhook) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateGlobalWebhookOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateGlobalWebhookDefault generic error response

swagger:response createGlobalWebhookDefault
*/
type CreateGlobalWebhookDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateGlobalWebhookDefault creates CreateGlobalWebhookDefault with default headers values
func NewCreateGlobalWebhookDefault(code int) *CreateGlobalWebhookDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateGlobalWebhookDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create global webhook default response
func (o *CreateGlobalWebhookDefault) WithStatusCode(code int) *CreateGlobalWebhookDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create global webhook default response
func (o *CreateGlobalWebhookDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create global webhook default response
func (o *CreateGlobalWebhookDefault) WithPayload(payload *models.Error) *CreateGlobalWebhookDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create global webhook default response
func (o *CreateGlobalWebhookDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateGlobalWebhookDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
