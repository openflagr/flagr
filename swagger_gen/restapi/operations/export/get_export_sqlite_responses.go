// Code generated by go-swagger; DO NOT EDIT.

package export

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openflagr/flagr/swagger_gen/models"
)

// GetExportSqliteOKCode is the HTTP code returned for type GetExportSqliteOK
const GetExportSqliteOKCode int = 200

/*
GetExportSqliteOK OK

swagger:response getExportSqliteOK
*/
type GetExportSqliteOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewGetExportSqliteOK creates GetExportSqliteOK with default headers values
func NewGetExportSqliteOK() *GetExportSqliteOK {

	return &GetExportSqliteOK{}
}

// WithPayload adds the payload to the get export sqlite o k response
func (o *GetExportSqliteOK) WithPayload(payload io.ReadCloser) *GetExportSqliteOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get export sqlite o k response
func (o *GetExportSqliteOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExportSqliteOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
GetExportSqliteDefault generic error response

swagger:response getExportSqliteDefault
*/
type GetExportSqliteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetExportSqliteDefault creates GetExportSqliteDefault with default headers values
func NewGetExportSqliteDefault(code int) *GetExportSqliteDefault {
	if code <= 0 {
		code = 500
	}

	return &GetExportSqliteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get export sqlite default response
func (o *GetExportSqliteDefault) WithStatusCode(code int) *GetExportSqliteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get export sqlite default response
func (o *GetExportSqliteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get export sqlite default response
func (o *GetExportSqliteDefault) WithPayload(payload *models.Error) *GetExportSqliteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get export sqlite default response
func (o *GetExportSqliteDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetExportSqliteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
