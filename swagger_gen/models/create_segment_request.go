// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateSegmentRequest create segment request
//
// swagger:model createSegmentRequest
type CreateSegmentRequest struct {

	// description
	// Required: true
	// Min Length: 1
	Description *string `json:"description"`

	// rollout percent
	// Required: true
	// Maximum: 100
	// Minimum: 0
	RolloutPercent *int64 `json:"rolloutPercent"`
}

// Validate validates this create segment request
func (m *CreateSegmentRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRolloutPercent(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateSegmentRequest) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description); err != nil {
		return err
	}

	if err := validate.MinLength("description", "body", *m.Description, 1); err != nil {
		return err
	}

	return nil
}

func (m *CreateSegmentRequest) validateRolloutPercent(formats strfmt.Registry) error {

	if err := validate.Required("rolloutPercent", "body", m.RolloutPercent); err != nil {
		return err
	}

	if err := validate.MinimumInt("rolloutPercent", "body", *m.RolloutPercent, 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("rolloutPercent", "body", *m.RolloutPercent, 100, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create segment request based on context it is used
func (m *CreateSegmentRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateSegmentRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateSegmentRequest) UnmarshalBinary(b []byte) error {
	var res CreateSegmentRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
