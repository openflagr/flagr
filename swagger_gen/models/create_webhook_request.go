// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateWebhookRequest create webhook request
//
// swagger:model createWebhookRequest
type CreateWebhookRequest struct {

	// description
	Description string `json:"description,omitempty"`

	// enabled
	Enabled *bool `json:"enabled,omitempty"`

	// Comma-separated list of events to trigger on
	// Required: true
	Events *string `json:"events"`

	// Optional secret for webhook signature
	Secret string `json:"secret,omitempty"`

	// url
	// Required: true
	// Min Length: 1
	URL *string `json:"url"`
}

// Validate validates this create webhook request
func (m *CreateWebhookRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEvents(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateWebhookRequest) validateEvents(formats strfmt.Registry) error {

	if err := validate.Required("events", "body", m.Events); err != nil {
		return err
	}

	return nil
}

func (m *CreateWebhookRequest) validateURL(formats strfmt.Registry) error {

	if err := validate.Required("url", "body", m.URL); err != nil {
		return err
	}

	if err := validate.MinLength("url", "body", *m.URL, 1); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create webhook request based on context it is used
func (m *CreateWebhookRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateWebhookRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateWebhookRequest) UnmarshalBinary(b []byte) error {
	var res CreateWebhookRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
